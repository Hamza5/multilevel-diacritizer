import unittest
from random import randint, choices, choice

from models import BigramHMMPatternDiacritizer
from processing import *


class ProcessingFunctionsTestCase(unittest.TestCase):

    def setUp(self):
        self.arabic_letters_and_space = [chr(x) for x in list(range(0x0621, 0x63B)) + list(range(0x0641, 0x064B)) +
                                         [ord(' ')]]

    def test_clear_diacritics(self):
        self.assertEqual(clear_diacritics('أوَائِلَ الأشياء: الصُّبْحُ أوَّلُ النَّهارِ، الْوَسْمِيُّ أوَّلُ المَطرِ.'),
                         'أوائل الأشياء: الصبح أول النهار، الوسمي أول المطر.')
        self.assertEqual(clear_diacritics('Python 3.7'), 'Python 3.7')

    def test_extract_diacritics(self):
        self.assertEqual(
            extract_diacritics('الدَّعْوَى: اسم ما يُدَّعَى.'),
            ['', '', ('ّ', 'َ'), 'ْ', 'َ', '', '', '', '', '', '', '', '', '', '', 'ُ', ('ّ', 'َ'), 'َ', '', '']
        )
        random_text_without_diacritics = ''.join(choices(self.arabic_letters_and_space, k=1000))
        self.assertEqual(len(extract_diacritics(random_text_without_diacritics)), len(random_text_without_diacritics))

    def test_merge_diacritics(self):
        self.assertEqual(
            merge_diacritics(
                'الدعوى: اسم ما يدعى.',
                ['', '', ('ّ', 'َ'), 'ْ', 'َ', '', '', '', '', '', '', '', '', '', '', 'ُ', ('ّ', 'َ'), 'َ', '', '']
            ), 'الدَّعْوَى: اسم ما يُدَّعَى.'
        )

    def test_merge_extract_clear_diacritics(self):
        random_arabic_text = ''.join(choices(self.arabic_letters_and_space, k=1000))
        random_diacritics = choices(list(DIACRITICS) + [''] + [('ّ', x) for x in DIACRITICS.difference({'ّ'})],
                                    k=len(random_arabic_text))
        random_diacritized_text = merge_diacritics(random_arabic_text, random_diacritics)
        self.assertEqual(extract_diacritics(random_diacritized_text), random_diacritics)
        random_diacritized_text = random_arabic_text
        i = 1
        while i < len(random_diacritized_text):
            random_diacritized_text = random_diacritized_text[:i] + choice(list(DIACRITICS)) + \
                                      random_diacritized_text[i:]
            i += randint(2, 10)
        self.assertEqual(merge_diacritics(clear_diacritics(random_diacritized_text),
                                          extract_diacritics(random_diacritized_text)),
                         random_diacritized_text)

    def test_convert_to_pattern(self):
        random_arabic_text = ''.join(choices(self.arabic_letters_and_space, k=10))
        random_diacritized_text = random_arabic_text
        i = 1
        while i < len(random_diacritized_text):
            random_diacritized_text = random_diacritized_text[:i] + choice(list(DIACRITICS)) + \
                                      random_diacritized_text[i:]
            i += randint(2, 10)
        self.assertEqual(len(convert_to_pattern(random_diacritized_text)), len(random_diacritized_text))
        words_patterns = {
            'المعْنَى': 'الححْحَى',
            'دلالة': 'ححاحة',
            'بالوضع': 'بالوحح',
            'الجمع': 'الححح',
            'لإِدراك': 'لإِححاك',
            'والتفرقة': 'والححححة',
            'دلَّ': 'ححَّ',
            'نساء': 'نحاء',
            'صفات': 'ححات',
            'جَعَلَهُ': 'حَحَحَهُ',
            'وسُؤْرُ': 'وحُؤْحُ',
            'ل': 'ح',
            'مضمون': 'مححون',
            'ورأيتهما': 'وحأيتهما',
            'فيضحكن': 'فيححكن',
            'تلعبان': 'تحححان',
        }
        for word, pattern in words_patterns.items():
            self.assertEqual(convert_to_pattern(word), pattern)


class HMMDiacritizerTestCase(unittest.TestCase):

    def setUp(self):
        sentences = [
            'بِكُلِّ مُسْتَوَياتِهِ',
            'إِذ تَقَدَّمَهُ بِفارِقِ عَشْرِ نِقاطٍ',
            'المَسِيحِيِّينَ وَالمُسْلِمِينَ',
            'وَرافَقَهُ فِي الجَوْلَةِ رَئِيسُ بَلَدِيَّةِ فيسان عَبْدُه قطايا وَمَخاتيرُ وَفَعالِيّاتٌ',
            'أَمّا الفَرِيقُ الثانِي فَيَقُولُ إِنَّ المَطْلُوبَ فَقَط التَبْلِيغُ دُونَ الاِجْتِماعِ',
            'مَن المَسْؤُولُ عَن هذا الوَضْعِ',
            'سَواءٌ وافَقَ هانْز بلِيكس أَو رَفَضَ',
            'عِلْمًا أَنَّ مَعارِكَ طاحِنَةً شُنَّت فِي الحُكُومَةِ السابِقَةِ مِن أَجْلِ هذَيْنِ السندين وَلكِن دُونَ جَدْوَى حَتَّى الآنَ',
            'وَكانَ قادِرًا عَلَى السَماحِ لِنَفْسِهِ بِالسُخْرِيَّةِ مِن الشِعاراتِ وَالحُلُولِ السِحْرِيَّةِ',
            'وَأُناشِدُ الرَئِيسَ لَحُود تَنْفِيذَ خِطابِ القَسَمِ',
            'لَم يَبْقَ فِي قِيادَةِ الحِزْبِ مِن أَعْضاءِ اللَجْنَةِ المَرْكَزِيَّةِ الحالِيَّةِ إِلّا هُو جِينْتاو',
            'بَرِيئَةٌ مِن كُلِّ عَيْبٍ وَمُمْتَلِئَةٌ نِعْمَةً',
            'وَلَخَّصَ البابا الَّذِي بَدا فِي صِحَّةٍ جَيِّدَةٍ فِي كَلِمَتِهِ المَواضِيعَ الَّتِي تَطَرَّقَ إِلَيها طِوالَ تَوَلِّيهِ رِئاسَةَ الكَنِيسَةِ طِوالَ 1000 سَنَةً',
            'تَتَعَلَّقُ بِالمَحْكَمَةِ الجِنائِيَّةِ الدَوْلِيَّةِ',
            'وَنَعْمَلُ لِالحُصُولِ عَلَى المُساعَدَةِ',
            'أَيْ زِيارَةُ قَصْرِ بَعَبْدا',
            'وَنَقَلَت وِكالَةُ الجُمْهُورِيَّةِ الإِسْلامِيَّةِ لِالأَنْباءِ أرنا الإِيرانِيَّةُ عَن المَسْؤُولِ الأَمْنِيِّ فِي وِلايَةِ سِيسْتان بَلُوشِسْتان الحُدُودِيَّةِ غُلام رِضا جحدان أَنَّ الإِيرانِيِّينَ وَالأَجانِبَ الذي يَحْمِلُونَ الوَثائِقَ المَطْلُوبَةَ سَيَتَمَكَّنُونَ اِعْتِبارًا مِن اليَوْمِ مِن العُبُورِ إِلَى أَفْغانِسْتانَ مِن نُقْطَةِ ميلاك الحُدُودِيَّةِ',
            'وَأَتَعاطَفُ مَعَ اللاجِئِ المُصابِ',
            'وَسَفِيرِ الكُوَيْتِ عَلِيّ سُلَيْمان السَعِيد',
            'لِذا',
            'وَدَعا البَيانُ الجامِعَةَ العَرَبِيَّةَ وَمُنَظَّمَةَ المُؤْتَمَرِ الإِسْلامِيِّ إِلَى إِجْراءِ تَحَرُّكٍ واسِعٍ لِثَنْيِ الحُكُومَةِ الكَنَدِيَّةِ عَن قَرارِها الجائِرِ',
            'كَما يَشْمَلُ تَعْرِيفُ الأُونُرْوا لِلاجِئِ كُلَّ مَن تَحَدَّرَ مِن شَخْصٍ أَصْبَحَ لاجِئًا عامَ 1000',
            'تَحَدَّثَ صادر عَن المُناسَبَةِ فَاِعْتَبَرَ أَنَّها لَيْسَت مُهِمَّةً لِالمَصْرَفِ اللُبْنانِيِّ الكَنَدِيِّ فَقَط بَل كَذلِكَ لِالقِطاعِ المَصْرَفِيِّ كُلِّهِ',
            'وَقالَ ريدج أن الصَوْتَ المُسَجَّلَ عَلَى شَرِيطِ الجَزِيرَةِ هُوَ لِزَعِيمِ القاعِدَةِ',
            'وَتَقْتَرِحُ سُوِيسْرا رَفْعَ ضَرائِبَ عِنْدَ المَصْدَرِ بِنِسْبَةِ 1000 فِي المِئَةِ عَلَى فَوائِدِ المُدَّخَراتِ الأُورُوبِّيَّةِ المُودَعَةِ فِي المَصارِفِ السُوِيسْرِيَّةِ بَيْنَما رَفَضَ الاِتِّحادُ الأُورُوبِّيُّ حَتَّى الآنَ هذا الأقتراح مفضلًا تَبادُلَ المَعْلُوماتِ حَوْلَ أَصْحابِ الحِساباتِ الأُورُوبِّيَّةِ فِي سُوِيسْرا وَهذا يَفْتَرِضُ رَفْعَ السِرِّيَّةِ عَن الحِساباتِ المَصْرِفِيَّةِ',
            '1000 مُحَقِّقًا فَوْزَهُ السادِسَ فِي تِسْعِ مُبارَياتٍ',
            'داعِيًا مُواطِنِيها بِصَوْتٍ قَوِيٍّ إِلَى إِنْجابِ مَزِيدٍ مِن الأَوْلادِ لِمُعالَجَةِ ما سَمّاهُ أَزْمَةَ مُعَدَّلاتِ الوِلادَةِ',
            'وَسَيَحِلُّ الحُقُوقِيُّ لويجي ماتزيلا الَّذِي لا اِنْتِماءَ سِياسِيًّا لَهُ',
            'وَسَتَحْتَكِرُ الشَرِكَةُ الأُولَى إِنْتاجَ الكَهْرَباءِ وَتَوْزِيعَها لِسَبْعِ أَو عَشْرِ سِنِينَ',
            'وَإِيجادِ أَسْواقٍ غَيْرِ تَقْلِيدِيَّةٍ لَهُ وَلكِن دُونَ جَدْوَى',
            'المُعارَضاتُ العِراقِيَّةُ وَالقَرارُ 1000 تَرْحِيبٌ ح اِتَّسَمَت رُدُودُ فِعْلِ الأَحْزابِ العِراقِيَّةِ المُعارِضَةِ عُمُومًا',
            'وَاِسْتَمَعَت إِلَى مُلاحَظاتِ اللِجانِ الفَنِّيَّةِ وَالقانُونِيَّةِ وَلَجْنَةِ الإِعْدادِ وَالتَوْجِيهِ',
            'نَظَرًا إِلَى اِتِّهامِهِما العِراقَ بِأَنَّهُ أَنْتَجَ',
            'مِن خِلالِ نَشاطِهِ التَدْرِيبِيِّ وَأَكادِيمِيَّتِهِ لِالعُلُومِ المالِيَّةِ وَالمَصْرَفِيَّةِ',
            'بِحِدَّتِها بَيْنَ رَئِيسِ الجُمْهُورِيَّةِ وَرَئِيسِ الوُزَراءِ',
            'السَبْتَ 1000 تِشْرِينَ الأَوَّلَ بُطُولَتا بَيْرُوتَ وَلُبْنانَ فِي كَمالِ الأَجْسامِ',
            'بَيْنَها حَرَسُ الحُدُودِ',
            'عَمِلَ اِخْتِصاصِيُّونَ قانُونِيُّونَ',
            'وَأَعْرَبَ الرَئِيسُ الأَفْغانِيُّ حَمِيد قرضاي المَوْجُودُ فِي نِيُويُورْك عَن أَمَلِهِ فِي أَن يَدَعَنا أُسامَة وَشَأْنَنا',
            'عَمَّتُها ابتهاج قدورة',
            'وَالبُطُولَةُ أَلا تَنْضَحُ بِها القُلُوبُ الكَبِيرَةُ وَالأَرْواحُ السامِيَةُ وَالجِباهُ الشامِخَةُ',
            'وَعَدَدٌ مِن رُؤَساءِ الهَيْئاتِ الاِقْتِصادِيَّةِ وَالمَصْرِفِيَّةِ',
            'أَبْطالٌ هُم أُولَئِكَ الَّذِينَ حَقَّقُوا الاِنْتِصاراتِ عَلَى عَدُوٍّ كانَ أُسْطُورَةً لا يَقْهَرُ',
            'خَسِرَ المجد الدِمَشْقِيُّ أَمامَ ضَيْفِهِ جَبْلَة 1000 فِي المُباراَةِ الَّتِي أُجْرِيَت بَيْنَهُما أَمْسِ فِي دِمَشْقَ فِي اِفْتِتاحِ المَرْحَلَةِ الخامِسَةِ مِن الدَوْرِيِّ العامِّ ال 1000 السُورِيِّ لِكُرَةِ القَدَمِ',
            'لكِنَّ القِصَّةَ لَيْسَت مُتَوَقِّفَةً عَلَى ما يُرِيدُ المستر بلِيكس أَو يَرْفُضُ',
            'تَشْدِيدَ العُقُوباتِ وَتَشْرِيعَ آلِيَّةِ مُطارَدَةِ الشُرْطَةِ لِالدَرّاجاتِ وَضَبْطِها',
            'الَّذِينَ هُوَ لَيْسَ بِوَكِيلِهِم',
            'عَلَى الأَقَلِّ لِأَنَّهُ يُقَدِّمُ لِالعالَمِ صِيغَةَ تَعايُشٍ خَلّاقٍ بَيْنَ الطَوائِفِ وَالاثنيات المُتَعَدِّدَةِ',
            'مِنها نَدْوَةٌ فِي لُبْنانَ بِرِعايَةِ لَحُود فِي 1000 أَيّارَ المُقْبِلِ',
            'ثُمَّ كانَت كَلِمَةٌ لِرَئِيسَةِ النادِي السَيِّدَةِ جُون بِشارَة'
        ]
        self.diacritizer = BigramHMMPatternDiacritizer([s.split() for s in sentences])

    def test_predict(self):
        self.assertEqual(self.diacritizer.predict('تقوم الحكومة بزيادة إنتاج الكهرباء'.split()),
                         ['تقوم', 'الحُكُومَةِ', 'بزيادة', 'إِنْتاجَ', 'الكَهْرَباءِ'])
        self.assertEqual(self.diacritizer.predict('انعقد المؤتمر الإسلامي يوم أمس'.split()),
                         ['انعقد', 'المُؤْتَمَرِ', 'الإِسْلامِيِّ', 'يوم', 'أَمْسِ'])
        self.assertEqual(self.diacritizer.predict('طرح السؤال من المسؤول عن هذا الوضع'.split()),
                         ['طَرْحَ', 'السؤال', 'مَن', 'المَسْؤُولُ', 'عَن', 'هذا', 'الوَضْعِ'])
        self.assertEqual(self.diacritizer.predict('فرض العقوبات الاقتصادية'.split()),
                         ['فَرَض', 'العُقُوباتِ', 'الاِقْتِصادِيَّةِ'])


if __name__ == '__main__':
    unittest.main()
